// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "BOTBIO",
    "version": "0.0.1"
  },
  "paths": {
    "/connection": {
      "get": {
        "produces": [
          "text/plain",
          "application/json"
        ],
        "operationId": "getconection",
        "responses": {
          "200": {
            "description": "returns a greeting",
            "schema": {
              "description": "contains the actual greeting as plain text",
              "type": "string"
            }
          }
        }
      }
    },
    "/connection/{id}": {
      "get": {
        "produces": [
          "text/plain",
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "getconnectionbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          }
        }
      },
      "put": {
        "produces": [
          "text/plain",
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "putconnectionbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "Ip",
            "in": "query"
          },
          {
            "type": "string",
            "name": "DateConnect",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "getcustomerbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "connection": {
      "description": "information connection",
      "type": "object",
      "properties": {
        "DateConnect": {
          "description": "DateConnect",
          "type": "string",
          "x-go-name": "DateConnect"
        },
        "ID": {
          "description": "id in database",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "Ip": {
          "description": "idnav",
          "type": "string",
          "x-go-name": "Ip"
        }
      }
    },
    "customer": {
      "description": "information clients",
      "type": "object",
      "properties": {
        "ID": {
          "description": "id in database",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "Name": {
          "description": "Nom du client",
          "type": "string",
          "x-go-name": "NameClient"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "BOTBIO",
    "version": "0.0.1"
  },
  "paths": {
    "/connection": {
      "get": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "operationId": "getconection",
        "responses": {
          "200": {
            "description": "returns a greeting",
            "schema": {
              "description": "contains the actual greeting as plain text",
              "type": "string"
            }
          }
        }
      }
    },
    "/connection/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "getconnectionbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          }
        }
      },
      "put": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "putconnectionbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "Ip",
            "in": "query"
          },
          {
            "type": "string",
            "name": "DateConnect",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "operationId": "getcustomerbyid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of user in database",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "information connection",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "connection": {
      "description": "information connection",
      "type": "object",
      "properties": {
        "DateConnect": {
          "description": "DateConnect",
          "type": "string",
          "x-go-name": "DateConnect"
        },
        "ID": {
          "description": "id in database",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "Ip": {
          "description": "idnav",
          "type": "string",
          "x-go-name": "Ip"
        }
      }
    },
    "customer": {
      "description": "information clients",
      "type": "object",
      "properties": {
        "ID": {
          "description": "id in database",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "Name": {
          "description": "Nom du client",
          "type": "string",
          "x-go-name": "NameClient"
        }
      }
    }
  }
}`))
}
