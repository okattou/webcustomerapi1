// Code generated by go-swagger; DO NOT EDIT.

package connection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewPostconectionParams creates a new PostconectionParams object
//
// There are no default values defined in the spec.
func NewPostconectionParams() PostconectionParams {

	return PostconectionParams{}
}

// PostconectionParams contains all the bound params for the postconection operation
// typically these are obtained from a http.Request
//
// swagger:parameters postconection
type PostconectionParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  In: query
	*/
	DateConnect *string
	/*
	  In: query
	*/
	IP *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewPostconectionParams() beforehand.
func (o *PostconectionParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qDateConnect, qhkDateConnect, _ := qs.GetOK("DateConnect")
	if err := o.bindDateConnect(qDateConnect, qhkDateConnect, route.Formats); err != nil {
		res = append(res, err)
	}

	qIP, qhkIP, _ := qs.GetOK("Ip")
	if err := o.bindIP(qIP, qhkIP, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindDateConnect binds and validates parameter DateConnect from query.
func (o *PostconectionParams) bindDateConnect(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.DateConnect = &raw

	return nil
}

// bindIP binds and validates parameter IP from query.
func (o *PostconectionParams) bindIP(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.IP = &raw

	return nil
}
